# Copyright (C) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

base_root = "../../../../../"
import("//test/xts/tools/build/suite.gni")

module_output_path = "dcts/distributedhardware"

ohos_moduletest_suite("DctsSubdisScreenTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  module_out_path = module_output_path
  include_dirs = [
    "$base_root/foundation/distributedhardware/distributed_screen/services/common/utils/include",
    "$base_root/foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_sink/include",
    "$base_root/foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_source/include",
    "$base_root/foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_source/include/callback",
    "$base_root/foundation/distributedhardware/distributed_hardware_fwk/common/utils/include",
    "$base_root/foundation/window/window_manager/interfaces/innerkits/dm",
    "$base_root/foundation/distributedhardware/distributed_screen/services/screenclient/include",
    "$base_root/foundation/window/window_manager/interfaces/innerkits/wm",
    "$base_root/foundation/distributedhardware/distributed_screen/common/include",
    "$base_root/foundation/distributedhardware/distributed_hardware_fwk/common/log/include",
    "$base_root/foundation/distributedhardware/distributed_hardware_fwk/utils/include/log",
    "$base_root/foundation/communication/dsoftbus/interfaces/kits/common",
  ]

  sources = [
    "decoder_demo.cpp",
    "dsreen_automat_test.cpp",
    "test.cpp",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"DctsSubdisScreenTest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  deps = [
    "$base_root/foundation/communication/dsoftbus/sdk:softbus_client",
    "$base_root/foundation/distributedhardware/distributed_screen/common:distributed_screen_utils",
    "$base_root/foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_sink:distributed_screen_sink_sdk",
    "$base_root/foundation/distributedhardware/distributed_screen/interfaces/innerkits/native_cpp/screen_source:distributed_screen_source_sdk",
    "$base_root/foundation/distributedhardware/distributed_screen/services/screenclient:distributed_screen_client",
    "$base_root/foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "$base_root/foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "$base_root/foundation/window/window_manager/dm:libdm",
    "$base_root/foundation/window/window_manager/wm:libwm",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "av_codec:av_codec_client",
    "c_utils:utils",
    "distributed_hardware_fwk:distributedhardwareutils",
    "dsoftbus:softbus_client",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "hilog:libhilog",
    "media_foundation:media_foundation",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]

  subsystem_name = "distributedhardware"
  part_name = "distributed_screen"
}
